name: self-hosted-gpu-test
on:
  push:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

jobs:
  start-runner:
    name: Start self-hosted EC2 runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-ec2-runner.outputs.label }}
      ec2-instance-id: ${{ steps.start-ec2-runner.outputs.ec2-instance-id }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Try to start EC2 runner
        id: start-ec2-runner
        uses: machulav/ec2-github-runner@main
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          ec2-image-id: ami-04d16a12bbc76ff0b
          ec2-instance-type: g4dn.xlarge
          subnet-id: subnet-0dee8543e12afe0cd # us-east-1a
          security-group-id: sg-0f9809618550edb98
          # iam-role-name: self-hosted-runner # optional, requires additional permissions
          aws-resource-tags: > # optional, requires additional permissions
            [
              {"Key": "Name", "Value": "ec2-github-runner"},
              {"Key": "GitHubRepository", "Value": "${{ github.repository }}"}
            ]

  do-the-job:
    name: Do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    timeout-minutes: 25
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Install Miniconda
        uses: conda-incubator/setup-miniconda@v2
        env:
          HOME: /home/ec2-user
        with:
          python-version: ${{ matrix.python }}
          channels: conda-forge
          mamba-version: "*"
          conda-remove-defaults: "true"

      - name: Install build dependencies
        run: |
          mamba install -c conda-forge gxx_linux-64="10.3.*" cudatoolkit="11.7.*" nvcc_linux-64="11.7.*" python-build

      - name: Build package
        run: |
          python -m build
        env:
          ENABLE_CUDA: "1"

      - name: Install package
        run: |
          mamba create -n nnpops -y
          mamba activate nnpops
          mamba install python=${{ matrix.python }} pytest mdtraj torchani=${{ matrix.torchani }}
          pip install dist/*.whl

      - name: List conda environment
        run: |
          mamba activate nnpops
          conda list

      - name: Test
        run: |
          mamba activate nnpops
          export CUBLAS_WORKSPACE_CONFIG=:4096:8
          pytest ./tests/ -v -s --durations=10

  stop-runner:
    name: Stop self-hosted EC2 runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Stop EC2 runner
        uses: machulav/ec2-github-runner@main
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          ec2-instance-id: ${{ needs.start-runner.outputs.ec2-instance-id }}
