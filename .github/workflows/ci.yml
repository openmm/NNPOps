name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        include:
          # Oldest supported versions
          - enable_cuda: true
            cuda: "10.2.89"
            gcc: "8.5.0"
            nvcc: "10.2"
            python: "3.7"
            pytorch: "1.11.0"
          # Latest supported versions
          - enable_cuda: true
            cuda: "11.2.2"
            gcc: "10.3.0"
            nvcc: "11.2"
            python: "3.10"
            pytorch: "1.11.0"
          # Without CUDA
          - enable_cuda: false
            gcc: "10.3.0"
            python: "3.10"
            pytorch: "1.11.0"

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Install CUDA Toolkit
      uses: Jimver/cuda-toolkit@v0.2.4
      with:
        cuda: ${{ matrix.cuda }}
      if: ${{ matrix.enable_cuda }}

    - name: Install Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        activate-environment: ""
        auto-activate-base: true
        miniforge-variant: Miniforge3

    - name: Prepare dependencies (with CUDA)
      shell: bash -l {0}
      if: ${{ matrix.enable_cuda }}
      run: |
        sed -i -e "/cudatoolkit/c\  - cudatoolkit ${{ matrix.cuda }}" \
               -e "/gxx_linux-64/c\  - gxx_linux-64 ${{ matrix.gcc }}" \
               -e "/nvcc_linux-64/c\  - nvcc_linux-64 ${{ matrix.nvcc }}" \
               -e "/python/c\  - python ${{ matrix.python }}.*" \
               -e "/pytorch-gpu/c\  - pytorch-gpu ${{ matrix.pytorch }}" \
               environment.yml

    - name: Prepare dependencies (without CUDA)
      shell: bash -l {0}
      if: ${{ !matrix.enable_cuda }}
      run: |
        sed -i -e "/cudatoolkit/c\  # - cudatoolkit" \
               -e "/gxx_linux-64/c\  - gxx_linux-64 ${{ matrix.gcc }}" \
               -e "/nvcc_linux-64/c\  # - nvcc_linux-64" \
               -e "/python/c\  - python ${{ matrix.python }}.*" \
               -e "/pytorch-gpu/c\  - pytorch-cpu ${{ matrix.pytorch }}" \
               environment.yml

    - name: Show dependency file
      shell: bash -l {0}
      run: cat environment.yml

    - name: Install dependencies
      shell: bash -l {0}
      run: conda env create -n nnpops -f environment.yml

    - name: List conda environment
      shell: bash -l {0}
      run: |
        conda activate nnpops
        conda list

    - name: Configure, compile, and install
      shell: bash -l {0}
      run: |
        conda activate nnpops
        mkdir build && cd build
        cmake .. \
              -DENABLE_CUDA=${{ matrix.enable_cuda }} \
              -DTorch_DIR=$CONDA_PREFIX/lib/python${{ matrix.python }}/site-packages/torch/share/cmake/Torch \
              -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
        make install

    - name: Test
      shell: bash -l {0}
      run: |
        conda activate nnpops
        cd build
        ctest --verbose --exclude-regex TestCuda
